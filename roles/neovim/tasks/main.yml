- name: Install neovim
  package: name=neovim state=latest
  become: true

- name: Check if nvim config already exist
  stat:
    path: ~/.config/nvim/
  register: nvim_config_exists

- name: Copy nvim configuration
  copy: src=nvim dest={{ lookup('env', 'HOME') }}/.config/.
  when: not nvim_config_exists.stat.exists

- name: Add vim-tmux-navigationr configuration
  lineinfile:
    path: "{{ lookup('env', 'HOME') }}/.tmux.conf"
    create: yes
    line: "{{ item }}"
    insertafter: EOF
  with_items:
    - "set-window-option -g mode-keys vi"
    - "# Smart pane switching with awareness of Vim splits."
    - "# See: https://github.com/christoomey/vim-tmux-navigator"
    - "is_vim=\"ps -o state= -o comm= -t '#{pane_tty}' \\"
    - "    | grep -iqE '^[^TXZ ]+ +(\\\\S+\\\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'\""
    - "bind-key -n 'C-h' if-shell \"$is_vim\" 'send-keys C-h'  'select-pane -L'"
    - "bind-key -n 'C-j' if-shell \"$is_vim\" 'send-keys C-j'  'select-pane -D'"
    - "bind-key -n 'C-k' if-shell \"$is_vim\" 'send-keys C-k'  'select-pane -U'"
    - "bind-key -n 'C-l' if-shell \"$is_vim\" 'send-keys C-l'  'select-pane -R'"
    - "tmux_version='$(tmux -V | sed -En \"s/^tmux ([0-9]+(.[0-9]+)?).*/\\1/p\")'"
    - "if-shell -b '[ \"$(echo \"$tmux_version < 3.0\" | bc)\" = 1 ]' \\"
    - "    \"bind-key -n 'C-\\\\' if-shell \\\"$is_vim\\\" 'send-keys C-\\\\'  'select-pane -l'\""
    - "if-shell -b '[ \"$(echo \"$tmux_version >= 3.0\" | bc)\" = 1 ]' \\"
    - "    \"bind-key -n 'C-\\\\' if-shell \\\"$is_vim\\\" 'send-keys C-\\\\\\\\'  'select-pane -l'\""
    - "bind-key -T copy-mode-vi 'C-h' select-pane -L"
    - "bind-key -T copy-mode-vi 'C-j' select-pane -D"
    - "bind-key -T copy-mode-vi 'C-k' select-pane -U"
    - "bind-key -T copy-mode-vi 'C-l' select-pane -R"
    - "bind-key -T copy-mode-vi 'C-\\' select-pane -l"
